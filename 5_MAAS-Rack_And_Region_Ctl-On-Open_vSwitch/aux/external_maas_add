#!/bin/bash -x
source /etc/ccio/mini-stack/profile

lxc network attach external maasctl eth1 eth1
lxc exec maasctl -- /bin/bash -c 'netplan apply --debug'

cat <<EOF >/tmp/run_maas_setup
#!/bin/bash -x

run_maas_login () {
login-maas-cli
[[ $? == "0" ]] || echo "Login Failed"
[[ $? == "0" ]] || exit 1
}

find_maas_rack_id () {
primary_RACK=\$(maas admin rack-controllers read \
                                | jq ".[] | {system_id:.system_id}" \
                                | awk -F'[",]' '/system_id/{print \$4}' \
              )
}

run_maas_setup () {

maas admin fabric update 1 name=external
maas admin spaces create name=external
maas admin subnet update 1 name=untagged-external
maas admin vlan update external 0 name=external space=external
maas admin vlan update internal untagged dhcp_on=False primary_rack=\${primary_RACK}

}

run_maas_login
find_maas_rack_id
run_maas_setup

rm /bin/run_maas_setup
echo "Finished run_maas_setup at \$(date)"

rm /bin/run_maas_setup
EOF

chmod +x /tmp/run_maas_setup
lxc file push /tmp/run_maas_setup maasctl/bin/run_maas_setup
lxc exec maasctl run_maas_setup
lxc stop maasctl
sleep 2
ovs-clear
lxc start maasctl
sleep 1
lxc list

#################################################################################
# WIP
#maas admin pods create type=virsh name=mini-stack.maas power_address=qemu+ssh://root@mini-stack/system cpu_over_commit_ratio=10 memory_over_commit_ratio=10
#maas admin dnsresource-records update name=mini-stack domain=maas rrdata=${ministack_SUBNET}.2 rrtype=cname ip_addresses=${ministack_SUBNET}.2
#maas admin devices create hostname=mini-stack domain=maas mac_addresses=02:17:77:61:55:7b ip_addresses=${ministack_SUBNET}.2 ip_address=${ministack_SUBNET}.2
